- include_stylesheet('admin/group')

%h1 
  Populate:
  = link_to @group.name, admin_group_url(@group)
  = render :partial => 'admin/groups/actions', :locals => {:group => @group}

%p 
  This is a quick way to bring a group of people into the system in one go. 
  Enter a comma-separated list of names and email addresses below (one person per line) 
  and each of those people will be invited into the system and issued an account with a vaguely adequate username 
  and entirely random password. Anyone who is already here will just be added to the group.

- if message = @group.messages.for_function('invitation').first
  %p
    %strong
      This group has its own 
      = link_to "invitation message", admin_message_url(message)
      that you might want to check before going any further.
- else
  - message = Message.functional('invitation')
  - if message
    %p
      This group doesn't have its own invitation message, so any new people will receive the 
      = link_to("standard invitation", admin_message_url(message)) + '.'

- if message
  - form_for :group, @group, :url => admin_group_group_invitations_url(@group), :html => {:id => 'preview_form', :method => 'post'} do
    .form-area
      %p
        %label{:for => "readerlist"}
          List of people
        - if Radiant::Config['reader.use_honorifics?']
          title or rank, 
        name, email, [login], [phone]
        %br
        = text_area_tag "readerlist", params[:readerlist], :class => "textarea", :style => "width: 100%; height: 240px;"

      %p.buttons
        = submit_tag 'preview import', :class => 'button'
        or
        = link_to "Cancel", admin_group_url(@group)

      %p
        When you press the 'preview import' button, the list will be repeated back to you to show exactly what reader accounts we are going to create and/or invite into this group. 
        You can make changes at that stage, but please check the list formatting carefully: be sure there are no commas other than where you want them and that the email addresses are correct.
 
- else
  %p.haserror
    %strong
      No invitation message could be found.
    You can't proceed unless you 
    = link_to("create one", new_admin_message_url(:function => 'invitation')) + '.'
    