- post ||= @post
- first_post ||= nil
- with_context ||= false
- without_author ||= false
- preview ||= false

%div.post{:id => post.dom_id}
  %div{:class => post.first? ? 'first_post' : 'reply'}
    .post_header
      - if admin?
        .post_control
          %p.post_admin
            = link_to "edit", edit_topic_post_url(post.topic, post), :class => 'edit_post', :id => "revise_post_#{post.id}"
            %span.separator |
            = link_to "delete", topic_post_url(post.topic, post), :method => 'delete', :class => 'delete_post', :id => "delete_post_#{post.id}", :title => "remove post", :confirm => "Are you sure you want to delete this message?"
      %h2
        - if with_context
          %a{:href => forum_topic_url(post.topic.forum, post.topic, :anchor => "post_#{post.id}"), :class => post.first? ? 'speaker begun' : 'speaker replied'}
            = gravatar_for(post.reader, {:size => 40}, {:alt => post.reader.name, :class => 'gravatar', :width => '40', :height => '40'})
            = post.topic.name
        - else
          %a{:href => reader_url(post.reader), :class => 'speaker'}
            = gravatar_for(post.reader, {:size => 40}, {:alt => post.reader.name, :class => 'gravatar', :width => '40', :height => '40'})
            = post.reader.name
      %p.context
        - if with_context
          = link_to post.reader.name, reader_url(post.reader)
          - if post.first?
            started a new discussion in 
            = link_to(post.topic.forum.name, forum_url(post.topic.forum))
          - else
            replied
        - else
          posted
        = friendly_date(post.created_at)
        - if post.updated_at && post.updated_at > post.created_at
          and updated
          - if post.updated_by && post.updated_by != post.created_by
            (by 
            = post.updated_by.name + ')'
          = friendly_date(post.updated_at)
          
    .post_wrapper
      .post_body
        - if post.frozen?
          %p Post removed
        - elsif preview
          = truncate_and_textilize(post.body, 100)
        - else
          = clean_textilize(post.body)
        
        - unless post.attachments.empty?
          .post_attachments
            %h4 
              attached:
            %ul 
              = render :partial => 'posts/attachment', :collection => post.attachments, :locals => {:removable => false}

        - if post.editable_by?(current_reader)
          .post_control
            %p
            - if post.editable_interval
              You have
              = distance_of_time_in_words(post.still_editable_for)
              to 
            = link_to "edit your post", edit_topic_post_url(post.topic, post), :class => 'edit_post', :id => "revise_post_#{post.id}"
              